#==============================
#config_cam_baseline_example.yaml

#This is the main CAM diagnostics config file
#for doing comparisons of a CAM run against
#another CAM run, or a CAM baseline simulation.

#Currently, if one is on NCAR's Casper or
#Cheyenne machine, then only the diagnostic output
#paths are needed, at least to perform a quick test
#run (these are indicated with "MUST EDIT" comments).
#Running these diagnostics on a different machine,
#or with a different, non-example simulation, will
#require additional modifications.
#
#Config file Keywords:
#--------------------
#
#1.  Using ${xxx} will substitute that text with the
#    variable referenced by xxx. For example:
#
#    cam_case_name: cool_run
#    cam_climo_loc: /some/where/${cam_case_name}
#
#    will set "cam_climo_loc" in the diagnostics package to:
#    /some/where/cool_run
#
#    Please note that currently this will only work if the
#    variable only exists in one location in the file.
#
#2.  Using ${<top_level_section>.xxx} will do the same as
#    keyword 1 above, but specifies which sub-section the
#    variable is coming from, which is necessary for variables
#    that are repeated in different subsections.  For example:
#
#    diag_basic_info:
#      cam_climo_loc:  /some/where/${diag_cam_climo.start_year}
#
#    diag_cam_climo:
#      start_year: 1850
#
#    will set "cam_climo_loc" in the diagnostics package to:
#    /some/where/1850
#
#Finally, please note that for both 1 and 2 the keywords must be lowercase.
#This is because future developments will hopefully use other keywords
#that are uppercase. Also please avoid using periods (".") in variable
#names, as this will likely cause issues with the current file parsing
#system.
#--------------------
#
##==============================
#
# This file doesn't (yet) read environment variables, so the user must
# set this themselves. It is also a good idea to search the doc for 'user'
# to see what default paths are being set for output/working files.
#
# Note that the string 'USER-NAME-NOT-SET' is used in the jupyter script
# to check for a failure to customize
#
# DEFAULT: user: 'USER-NAME-NOT-SET'

user: bundy


#This first set of variables specify basic info used by all diagnostic runs:
diag_basic_info:

    hist_num: h0
    component: lnd

    #Is this a model vs observations comparison?
    #If "false" or missing, then a model-model comparison is assumed:
    compare_obs: true

    #Generate HTML website (assumed false if missing):
    #Note:  The website files themselves will be located in the path
    #specified by "cam_diag_plot_loc", under the "<diag_run>/website" subdirectory,
    #where "<diag_run>" is the subdirectory created for this particular diagnostics run
    #(usually "case_vs_obs_XXX" or "case_vs_baseline_XXX").
    create_html: true

    #Location of observational datasets:
    #Note: this only matters if "compare_obs" is true and the path
    #isn't specified in the variable defaults file.
    obs_data_loc: /glade/work/nusbaume/SE_projects/model_diagnostics/ADF_obs

    #Location where re-gridded and interpolated CAM climatology files are stored:
    cam_regrid_loc: /glade/scratch/${user}/ADF/regrid

    #Overwrite CAM re-gridded files?
    #If false, or missing, then regridding will be skipped for regridded variables
    #that already exist in "cam_regrid_loc":
    cam_overwrite_regrid: false

    #Location where diagnostic plots are stored:
    cam_diag_plot_loc: /glade/scratch/${user}/ADF/plots

    #Use default variable plot settings?
    #If "true", then variable-specific plotting attributes as defined in
    #ADF/lib/adf_variable_defaults.yaml will be used:
    use_defaults: true

    #Location of ADF variable plotting defaults YAML file
    #if not using the one in ADF/lib:
  #  defaults_file: /some/path/to/defaults/file

    #Vertical pressure levels (in hPa) on which to plot 3-D variables
    #when using horizontal (e.g. lat/lon) map projections.
    #If this config option is missing, then no 3-D variables will be plotted on
    #horizontal maps.  Please note too that pressure levels must currently match
    #what is available in the observations file in order to be plotted in a
    #model vs obs run:
    plot_press_levels: [200,850]

    #Longitude line on which to center all lat/lon maps.
    #If this config option is missing then the central
    #longitude will default to 180 degrees E.
    central_longitude: 180

    #Apply monthly weights to seasonal averages.
    #If False or missing, then all months are
    #given the same weight:
    weight_season: True

    #Number of processors on which to run the ADF.
    #If this config variable isn't present then
    #the ADF defaults to one processor.  Also, if
    #you set it to "*" then it will default
    #to all of the processors available on a
    #single node/machine:
    num_procs: 8

    #If set to true, then redo all plots even if they already exist.
    #If set to false, then if a plot is found it will be skipped:
    redo_plot: false


#This second set of variables provides info for the CAM simulation(s) being diagnosed:
diag_cam_climo:

    #Calculate climatologies?
    #If false, neither the climatology or time-series files will be created:
    calc_cam_climo: true

    #Overwrite CAM climatology files?
    #If false, or not prsent, then already existing climatology files will be skipped:
    cam_overwrite_climo: false

    #Name of CAM case (or CAM run name):
    cam_case_name: bhist.e213cosp217.f09_g17.mdtf_v3.1995

    #Path to where all working files (beyond hist) should be written. ${dir_out}/${case}/${type}
    dir_out: /glade/campaign/cgd/amp/bundy

    #Location of CAM history (h0) files:
    #Example test files
#    cam_hist_loc: /glade/scratch/${user}/archive/${diag_cam_climo.cam_case_name}/atm/hist
    cam_hist_loc: /glade/p/cgd/amp/${user}/archive/${diag_cam_climo.cam_case_name}/${component}/hist

    #Location of CAM climatologies (to be created and then used by this script)
    cam_climo_loc: ${dir_out}/${diag_cam_climo.cam_case_name}/${component}/climo

    #model year when time series files should start:
    #Note:  Leaving this entry blank will make time series
    #       start at earliest available year.
    start_year: 1995

    #model year when time series files should end:
    #Note:  Leaving this entry blank will make time series
    #       end at latest available year.
    end_year: 2014

    #Do time series files need to be generated?
    #If True, then diagnostics assumes that model files are already time series.
    #If False, or if simply not present, then diagnostics will attempt to create
    #time series files from history (time-slice) files:
    cam_ts_done: false

    #Save interim time series files?
    #WARNING:  This can take up a significant amount of space, but will save 
    #          processing time the next time
    cam_ts_save: true

    #Overwrite time series files, if found?
    #If set to false, then time series creation will be skipped if files are found:
    cam_overwrite_ts: false

    #Location where time series files are (or will be) stored:
    cam_ts_loc: ${dir_out}/${diag_cam_climo.cam_case_name}/lnd/ts


    #----------------------

    #You can alternatively provide a list of cases, which will make the ADF
    #apply the same diagnostics to each case separately in a single ADF session.
    #All of the config variables below show how it is done, and are the only ones
    #that need to be lists.  This also automatically enables the generation of
    #a "main_website" in "cam_diag_plot_loc" that brings all of the different cases
    #together under a single website.

    #Also please note that config keywords cannot currently be used in list mode.

    #cam_case_name:
    #    - b.e20.BHIST.f09_g17.20thC.297_05
    #    - b1850.f19_g17.validation_mct.004

    #calc_cam_climo:
    #    - true
    #    - true

    #cam_overwrite_climo:
    #    - false
    #    - false

    #cam_hist_loc:
    #    - /glade/p/cesm/ADF/b.e20.BHIST.f09_g17.20thC.297_05
    #    - /glade/p/cesm/ADF/b1850.f19_g17.validation_mct.004

    #cam_climo_loc:
    #    -/some/where/you/want/to/have/climo_files/ #MUST EDIT!
    #    -/the/same/or/some/other/climo/files/location

    #start_year:
    #    - 1990
    #    - 90

    #end_year:
    #    - 1999
    #    - 99

    #cam_ts_done:
    #    - false
    #    - false

    #cam_ts_save:
    #    - true
    #    - true

    #cam_overwrite_ts:
    #    - false
    #    - false

    #cam_ts_loc:
    #    - /some/where/you/want/to/have/time_series_files/
    #    - /same/or/different/place/you/want/files

    #----------------------


#This third set of variables provide info for the CAM baseline climatologies.
#This only matters if "compare_obs" is false:
diag_cam_baseline_climo:

    #Calculate cam baseline climatologies?
    #If false, neither the climatology or time-series files will be created:
    calc_cam_climo: true

    #Overwrite CAM climatology files?
    #If false, or not present, then already existing climatology files will be skipped:
    cam_overwrite_climo: false

    #Name of CAM baseline case:
    cam_case_name: b.e20.BHIST.f09_g16.20thC.125.02

    #Location of CAM baseline history (h0) files:
    #Example test files
    cam_hist_loc: /glade/p/cesm/ADF/${diag_cam_baseline_climo.cam_case_name}

    #Location of baseline CAM climatologies:
    cam_climo_loc: /glade/scratch/${user}/ADF/${diag_cam_baseline_climo.cam_case_name}/climo

    #model year when time series files should start:
    #Note:  Leaving this entry blank will make time series
    #       start at earliest available year.
    start_year: 1990

    #model year when time series files should end:
    #Note:  Leaving this entry blank will make time series
    #       end at latest available year.
    end_year: 1999

    #Do time series files need to be generated?
    #If True, then diagnostics assumes that model files are already time series.
    #If False, or if simply not present, then diagnostics will attempt to create
    #time series files from history (time-slice) files:
    cam_ts_done: false

    #Save interim time series files for baseline run?
    #WARNING:  This can take up a significant amount of space:
    cam_ts_save: true

    #Overwrite baseline time series files, if found?
    #If set to false, then time series creation will be skipped if files are found:
    cam_overwrite_ts: false

    #Location where time series files are (or will be) stored:
    cam_ts_loc: /glade/scratch/${user}/ADF/${diag_cam_baseline_climo.cam_case_name}/ts 

#This fourth set of variables provides settings for calling the Climate Variability
# Diagnostics Package (CVDP). If cvdp_run is set to true the CVDP will be set up and
# run in background mode, likely completing after the ADF has completed.
# If CVDP is to be run PSL, TREFHT, TS and PRECT (or PRECC and PRECL) should be listed
# in the diag_var_list variable listing.
# For more CVDP information: https://www.cesm.ucar.edu/working_groups/CVC/cvdp/
diag_cvdp_info:

    # Run the CVDP on the listed run(s)?
    cvdp_run: false

    # CVDP code path, sets the location of the CVDP codebase
    #  CGD systems path = /home/asphilli/CESM-diagnostics/CVDP/Release/v5.2.0/
    #  CISL systems path = /glade/u/home/asphilli/CESM-diagnostics/CVDP/Release/v5.2.0/
    #  github location = https://github.com/NCAR/CVDP-ncl
    cvdp_codebase_loc: /glade/u/home/asphilli/CESM-diagnostics/CVDP/Release/v5.2.0/

    # Location where cvdp codebase will be copied to and diagnostic plots will be stored
    cvdp_loc: /glade/scratch/asphilli/ADF-Sandbox/cvdp/      #MUST EDIT!

    # tar up CVDP results?
    cvdp_tar: false


#+++++++++++++++++++++++++++++++++++++++++++++++++++
#These variables below only matter if you are using
#a non-standard method, or are adding your own
#diagnostic scripts.
#+++++++++++++++++++++++++++++++++++++++++++++++++++

#Note:  If you want to pass arguments to a particular script, you can
#do it like so (using the "averaging_example" script in this case):
# - {create_climo_files: {kwargs: {clobber: true}}}

#Name of time-averaging scripts being used to generate climatologies.
#These scripts must be located in "scripts/averaging":
time_averaging_scripts:
    - create_climo_files

#Name of regridding scripts being used.
#These scripts must be located in "scripts/regridding":
regridding_scripts:
    - regrid_and_vert_interp

#List of analysis scripts being used.
#These scripts must be located in "scripts/analysis":
analysis_scripts:
#    - amwg_table

#List of plotting scripts being used.
#These scripts must be located in "scripts/plotting":
plotting_scripts:
#    - global_latlon_map
#    - global_latlon_vect_map
#    - zonal_mean
#    - polar_map
#    - cam_taylor_diagram

#List of CAM variables that will be processesd:
#If CVDP is to be run PSL, TREFHT, TS and PRECT (or PRECC and PRECL) should be listed
diag_var_list:
   - levgrnd
   - levlak
   - levdcmp
   - time
   - lon
   - lat
   - area
   - landfrac
   - ACTUAL_IMMOB
   - AGNPP
   - ALBD
   - ALT
   - ALTMAX
   - AR
   - ATM_TOPO
   - BAF_CROP
   - BAF_PEATF
   - BCDEP
   - BGNPP
   - BTRAN2
   - BTRANMN
   - CH4PROD
   - CH4_SURF_AERE_SAT
   - CH4_SURF_AERE_UNSAT
   - CH4_SURF_DIFF_SAT
   - CH4_SURF_DIFF_UNSAT
   - CH4_SURF_EBUL_SAT
   - CH4_SURF_EBUL_UNSAT
   - COL_FIRE_CLOSS
   - COL_FIRE_NLOSS
   - CONC_O2_SAT
   - CONC_O2_UNSAT
   - COST_NACTIVE
   - COST_NFIX
   - COST_NRETRANS
   - CPHASE
   - CPOOL
   - CROPPROD1C
   - CROPPROD1C_LOSS
   - CROPPROD1N
   - CROPPROD1N_LOSS
   - CROPSEEDC_DEFICIT
   - CWDC
   - CWDC_LOSS
   - CWDC_vr
   - CWDN
   - CWDN_vr
   - DEADCROOTC
   - DEADCROOTN
   - DEADSTEMC
   - DEADSTEMN
   - DENIT
   - DISPVEGC
   - DISPVEGN
   - DSL
   - DSTDEP
   - DSTFLXT
   - DWT_CONV_CFLUX
   - DWT_CONV_CFLUX_DRIBBLED
   - DWT_CONV_NFLUX
   - DWT_CROPPROD1C_GAIN
   - DWT_CROPPROD1N_GAIN
   - DWT_SEEDN_TO_DEADSTEM
   - DWT_SEEDN_TO_LEAF
   - DWT_SLASH_CFLUX
   - DWT_WOODPRODC_GAIN
   - DWT_WOODPRODN_GAIN
   - DWT_WOOD_PRODUCTC_GAIN_PATCH
   - EFLXBUILD
   - EFLX_DYNBAL
   - EFLX_GRND_LAKE
   - EFLX_LH_TOT
   - EFLX_LH_TOT_ICE
   - EFLX_LH_TOT_R
   - ELAI
   - ER
   - ERRH2O
   - ERRH2OSNO
   - ERRSEB
   - ERRSOI
   - ERRSOL
   - ESAI
   - FAREA_BURNED
   - FCEV
   - FCH4
   - FCH4TOCO2
   - FCH4_DFSAT
   - FCOV
   - FCTR
   - FFIX_TO_SMINN
   - FGEV
   - FGR
   - FGR12
   - FH2OSFC
   - FINUNDATED
   - FIRA
   - FIRA_R
   - FIRE
   - FIRE_ICE
   - FIRE_R
   - FLDS
   - FLDS_ICE
   - FPI
   - FPSN
   - FREE_RETRANSN_TO_NPOOL
   - FROOTC
   - FROOTC_ALLOC
   - FROOTC_LOSS
   - FROOTC_TO_LITTER
   - FROOTN
   - FSA
   - FSAT
   - FSDS
   - FSDSND
   - FSDSNDLN
   - FSDSNI
   - FSDSVD
   - FSDSVDLN
   - FSDSVI
   - FSDSVILN
   - FSH
   - FSH_G
   - FSH_ICE
   - FSH_PRECIP_CONVERSION
   - FSH_R
   - FSH_RUNOFF_ICE_TO_LIQ
   - FSH_TO_COUPLER
   - FSH_V
   - FSM
   - FSNO
   - FSNO_EFF
   - FSNO_ICE
   - FSR
   - FSRND
   - FSRNDLN
   - FSRNI
   - FSRVD
   - FSRVDLN
   - FSRVI
   - FSR_ICE
   - FUELC
   - F_DENIT
   - F_N2O_DENIT
   - F_N2O_NIT
   - F_NIT
   - GPP
   - GR
   - GRAINC
   - GRAINC_TO_FOOD
   - GRAINC_TO_SEED
   - GRAINN
   - GROSS_NMIN
   - GSSHA
   - GSSHALN
   - GSSUN
   - GSSUNLN
   - H2OCAN
   - H2OSFC
   - H2OSNO
   - H2OSNO_TOP
   - H2OSOI
   - HEAT_CONTENT1
   - HEAT_FROM_AC
   - HIA
   - HIA_R
   - HIA_U
   - HR
   - HR_vr
   - HTOP
   - HUMIDEX
   - HUMIDEX_R
   - HUMIDEX_U
   - ICE_CONTENT1
   - JMX25T
   - Jmx25Z
   - LAISHA
   - LAISUN
   - LAKEICEFRAC_SURF
   - LAKEICETHICK
   - LAND_USE_FLUX
   - LEAFC
   - LEAFCN
   - LEAFC_ALLOC
   - LEAFC_CHANGE
   - LEAFC_LOSS
   - LEAFC_TO_LITTER
   - LEAFC_TO_LITTER_FUN
   - LEAFN
   - LEAFN_TO_LITTER
   - LEAF_MR
   - LFC2
   - LIQCAN
   - LIQUID_CONTENT1
   - LITFALL
   - LITR1C
   - LITR1C_vr
   - LITR1N
   - LITR1N_vr
   - LITR2C
   - LITR2C_vr
   - LITR2N
   - LITR2N_vr
   - LITR3C
   - LITR3C_vr
   - LITR3N
   - LITR3N_vr
   - LITTERC_HR
   - LITTERC_LOSS
   - LIVECROOTC
   - LIVECROOTN
   - LIVESTEMC
   - LIVESTEMN
   - LNC
   - MR
   - NACTIVE
   - NACTIVE_NH4
   - NACTIVE_NO3
   - NAM
   - NAM_NH4
   - NAM_NO3
   - NBP
   - NDEPLOY
   - NDEP_TO_SMINN
   - NECM
   - NECM_NH4
   - NECM_NO3
   - NEE
   - NEM
   - NEP
   - NET_NMIN
   - NFERTILIZATION
   - NFIRE
   - NFIX
   - NNONMYC
   - NNONMYC_NH4
   - NNONMYC_NO3
   - NPASSIVE
   - NPOOL
   - NPP
   - NPP_GROWTH
   - NPP_NACTIVE
   - NPP_NACTIVE_NH4
   - NPP_NACTIVE_NO3
   - NPP_NAM
   - NPP_NAM_NH4
   - NPP_NAM_NO3
   - NPP_NECM
   - NPP_NECM_NH4
   - NPP_NECM_NO3
   - NPP_NFIX
   - NPP_NNONMYC
   - NPP_NNONMYC_NH4
   - NPP_NNONMYC_NO3
   - NPP_NRETRANS
   - NPP_NUPTAKE
   - NRETRANS
   - NRETRANS_REG
   - NRETRANS_SEASON
   - NRETRANS_STRESS
   - NUPTAKE
   - NUPTAKE_NPP_FRACTION
   - OCDEP
   - O_SCALAR
   - PARVEGLN
   - PBOT
   - PCH4
   - PCO2
   - PCT_CFT
   - PCT_GLC_MEC
   - PCT_LANDUNIT
   - PCT_NAT_PFT
   - PFT_FIRE_CLOSS
   - PFT_FIRE_NLOSS
   - PLANT_NDEMAND
   - POTENTIAL_IMMOB
   - POT_F_DENIT
   - POT_F_NIT
   - PSNSHA
   - PSNSHADE_TO_CPOOL
   - PSNSUN
   - PSNSUN_TO_CPOOL
   - Q2M
   - QBOT
   - QCHARGE
   - QDRAI
   - QDRAI_PERCH
   - QDRAI_XS
   - QDRIP
   - QFLOOD
   - QFLX_DEW_GRND
   - QFLX_DEW_SNOW
   - QFLX_EVAP_TOT
   - QFLX_ICE_DYNBAL
   - QFLX_LIQ_DYNBAL
   - QFLX_SNOW_DRAIN
   - QFLX_SNOW_DRAIN_ICE
   - QFLX_SUB_SNOW
   - QH2OSFC
   - QICE
   - QICE_FRZ
   - QICE_MELT
   - QINFL
   - QINTR
   - QIRRIG
   - QOVER
   - QRGWL
   - QRUNOFF
   - QRUNOFF_ICE
   - QRUNOFF_ICE_TO_COUPLER
   - QRUNOFF_RAIN_TO_SNOW_CONVERSION
   - QRUNOFF_TO_COUPLER
   - QSNOCPLIQ
   - QSNOEVAP
   - QSNOFRZ
   - QSNOFRZ_ICE
   - QSNOMELT
   - QSNOMELT_ICE
   - QSNO_TEMPUNLOAD
   - QSNO_WINDUNLOAD
   - QSNWCPICE
   - QSOIL
   - QSOIL_ICE
   - QVEGE
   - QVEGT
   - RAIN
   - RAIN_FROM_ATM
   - RAIN_ICE
   - RETRANSN
   - RETRANSN_TO_NPOOL
   - RH2M
   - RR
   - RSSHA
   - RSSUN
   - SABG
   - SABG_PEN
   - SABV
   - SEEDC
   - SEEDN
   - SLASH_HARVESTC
   - SMINN
   - SMINN_TO_NPOOL
   - SMINN_TO_PLANT
   - SMINN_TO_PLANT_FUN
   - SMINN_vr
   - SMIN_NH4
   - SMIN_NH4_vr
   - SMIN_NO3
   - SMIN_NO3_LEACHED
   - SMIN_NO3_RUNOFF
   - SMIN_NO3_vr
   - SMP
   - SNOBCMCL
   - SNOBCMSL
   - SNOCAN
   - SNODSTMCL
   - SNODSTMSL
   - SNOFSRND
   - SNOFSRNI
   - SNOFSRVD
   - SNOFSRVI
   - SNOINTABS
   - SNOOCMCL
   - SNOOCMSL
   - SNOTXMASS
   - SNOTXMASS_ICE
   - SNOUNLOAD
   - SNOW
   - SNOWDP
   - SNOWICE
   - SNOWICE_ICE
   - SNOWLIQ
   - SNOWLIQ_ICE
   - SNOW_DEPTH
   - SNOW_FROM_ATM
   - SNOW_ICE
   - SNOW_PERSISTENCE
   - SNOW_SINKS
   - SNOW_SOURCES
   - SOIL1C
   - SOIL1C_vr
   - SOIL1N
   - SOIL1N_vr
   - SOIL2C
   - SOIL2C_vr
   - SOIL2N
   - SOIL2N_vr
   - SOIL3C
   - SOIL3C_vr
   - SOIL3N
   - SOIL3N_vr
   - SOILC_CHANGE
   - SOILC_HR
   - SOILC_vr
   - SOILICE
   - SOILLIQ
   - SOILN_vr
   - SOILRESIS
   - SOILWATER_10CM
   - SOMC_FIRE
   - SOM_C_LEACHED
   - SR
   - STORVEGC
   - STORVEGN
   - SUPPLEMENT_TO_SMINN
   - SWBGT
   - SWBGT_R
   - SWBGT_U
   - TAUX
   - TAUY
   - TBOT
   - TBUILD
   - TG
   - TG_ICE
   - TH2OSFC
   - THBOT
   - TKE1
   - TLAI
   - TLAKE
   - TOPO_COL_ICE
   - TOTCOLC
   - TOTCOLCH4
   - TOTCOLN
   - TOTECOSYSC
   - TOTECOSYSN
   - TOTLITC
   - TOTLITC_1m
   - TOTLITN
   - TOTLITN_1m
   - TOTPFTC
   - TOTPFTN
   - TOTSOILICE
   - TOTSOILLIQ
   - TOTSOMC
   - TOTSOMC_1m
   - TOTSOMN
   - TOTSOMN_1m
   - TOTVEGC
   - TOTVEGN
   - TOT_WOODPRODC
   - TOT_WOODPRODC_LOSS
   - TOT_WOODPRODN
   - TOT_WOODPRODN_LOSS
   - TPU25T
   - TREFMNAV
   - TREFMXAV
   - TSA
   - TSAI
   - TSA_ICE
   - TSKIN
   - TSL
   - TSOI
   - TSOI_10CM
   - TSOI_ICE
   - TV
   - TWS
   - T_SCALAR
   - U10
   - U10_DUST
   - URBAN_AC
   - URBAN_HEAT
   - VCMX25T
   - VEGWP
   - VOLR
   - VOLRMCH
   - Vcmx25Z
   - WA
   - WASTEHEAT
   - WBT
   - WBT_R
   - WBT_U
   - WIND
   - WOODC
   - WOODC_ALLOC
   - WOODC_LOSS
   - WOOD_HARVESTC
   - WOOD_HARVESTN
   - WTGQ
   - W_SCALAR
   - XSMRPOOL
   - XSMRPOOL_RECOVER
   - ZBOT
   - ZWT
   - ZWT_CH4_UNSAT
   - ZWT_PERCH
